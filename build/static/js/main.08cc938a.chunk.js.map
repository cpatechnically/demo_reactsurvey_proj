{"version":3,"sources":["data lazy /^/survey_.*/.json$/ groupOptions: {} namespace object","survey/validators.js","survey/component.js","survey/inputs.js","survey/hooks.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","verifyTextInputType","inputType","Survey","props","useState","page","setPage","isFinalPage","setIsFinalPage","surveyValues","setSurveyValues","loadedInputs","setLoadedInputs","surveyId","useEffect","response","default","inputs","filter","inputOption","onSubmit","event","preventDefault","persist","target","elements","formInput","type","name","value","console","log","values","call","options","option","selected","checked","nextPage","alert","length","obj","index","className","inputKey","object","SurveySelectInput","multiple","hidden","data","optionClassName","label","SurveyRadioInput","required","htmlFor","SurveyTextInput","customValue","callback","setValue","handleChange","newValue","useInputChange","defaultValue","triggerCallback","inputProps","onChange","requred","placeholder","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08cc938a.chunk.js","sourcesContent":["var map = {\n\t\"./survey_1.json\": [\n\t\t16,\n\t\t4\n\t],\n\t\"./survey_2.json\": [\n\t\t17,\n\t\t5\n\t],\n\t\"./survey_3.json\": [\n\t\t18,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 14;\nmodule.exports = webpackAsyncContext;","export function verifyTextInputType (inputType) {\r\n    switch (inputType) {\r\n      case 'text':\r\n        return true;\r\n      case 'email':\r\n        return true\r\n      case 'number':\r\n        return true\r\n      case 'textarea':\r\n        return true\r\n      default:\r\n        return false\r\n    }\r\n  }","import React, {useEffect, useState} from 'react';\r\n\r\nimport {\r\n  SurveyTextInput,\r\n  SurveyRadioInput,\r\n  SurveySelectInput\r\n} from './index';\r\n\r\nimport { verifyTextInputType } from './validators';\r\n\r\nexport const Survey = (props) => {\r\n  const [page, setPage] = useState(1)\r\n  const [isFinalPage, setIsFinalPage] = useState(false)\r\n  const [surveyValues, setSurveyValues] = useState({})\r\n  const [loadedInputs, setLoadedInputs] = useState([])\r\n\r\n  const {surveyId} = props\r\n\r\n  useEffect(()=>{\r\n    if (surveyId){\r\n      // check if its a file going forward we would use api request\r\n      const inputDataFile = import(`../data/survey_${surveyId}.json`)\r\n      // http request\r\n      inputDataFile.then(response=>{\r\n        // set the new inputs list data\r\n        setLoadedInputs(response.default)\r\n      })\r\n    }\r\n  })\r\n\r\n  const triggerBackendUpdate = () => {\r\n    console.log('your done',surveyValues)\r\n    alert(\"Thank you!\")\r\n    // assume backend updated\r\n    setPage(1)\r\n    setSurveyValues({})\r\n    setIsFinalPage(false)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    event.persist()\r\n    for (let formInput of event.target.elements){\r\n      const verifyType = verifyTextInputType(formInput.type)\r\n      if (verifyType) {\r\n        surveyValues[formInput.name] = formInput.value\r\n      }\r\n\r\n      if (formInput.type === 'select-one') {\r\n        console.log(formInput.name, formInput.value)\r\n        surveyValues[formInput.name] = formInput.value\r\n      }\r\n\r\n      if (formInput.type === 'select-multiple') {\r\n        const selected = [].filter.call(formInput.options, option=>option.selected)\r\n        const values = selected.map(option => option.value)\r\n        surveyValues[formInput.name] = values\r\n      }\r\n      if (formInput.checked) {\r\n        // console.log(formInput.name, formInput.value)\r\n        surveyValues[formInput.name] = formInput.value\r\n      }\r\n      setSurveyValues(surveyValues)\r\n      const nextPage = page + 1\r\n      const inputs = loadedInputs ? loadedInputs.filter(inputOption => inputOption.page === nextPage) : []\r\n\r\n      if (isFinalPage) {\r\n        triggerBackendUpdate()\r\n      } else { \r\n        if (inputs.length === 0) {\r\n          setIsFinalPage(true)\r\n        } else {\r\n          setPage(nextPage)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const inputs = loadedInputs ? loadedInputs.filter(inputOption => inputOption.page === page) : []\r\n  return <form onSubmit={handleSubmit}>\r\n    {isFinalPage !== true && inputs.map((obj, index)=> {\r\n    //animation\r\n    const className = 'form-control mb-2 animate__animated animate__fadeIn'\r\n\r\n    const inputKey = `input-${index}-${page}`\r\n    return (obj.type === 'radio' || obj.type === 'checkbox' ) ?\r\n      <SurveyRadioInput \r\n        object={obj}  \r\n        key={inputKey}\r\n        className={className}\r\n        {...obj}\r\n      />\r\n\r\n      :\r\n\r\n      (obj.type === 'select') ?\r\n      \r\n      <SurveySelectInput \r\n        className={className}\r\n        object={obj}  \r\n        key={inputKey}\r\n        {...obj}\r\n      />\r\n      :\r\n      \r\n      <SurveyTextInput\r\n      className={className}\r\n      key={inputKey}\r\n      {...obj}\r\n      />\r\n    })\r\n  }\r\n\r\n  {isFinalPage === true &&\r\n    <p>Are you finished?</p>\r\n  }\r\n\r\n  <button\r\n  name='save_btn'\r\n  type='submit' \r\n  className='btn btn-primary my-5 animate__animated animate__fadeIn animate__delay-2s'>{isFinalPage === true ? \"Save\" : \"Contine\"}</button>\r\n  </form>\r\n}","import React from 'react';\r\n\r\nimport { useInputChange } from './hooks';\r\nimport { verifyTextInputType } from './validators';\r\n\r\n\r\nexport const SurveySelectInput = props => {\r\n    const {object} = props\r\n    return <select name={object.name} className={props.className} multiple={object.multiple}>\r\n      <option hidden value>Select an Option</option>\r\n        {object.options.map((data, index) => {\r\n          return <option \r\n            value={data.value}\r\n              id={`${object.name}-${index}`}\r\n              className={`form-check ${props.optionClassName}`}\r\n              key={`${object.type}-${index}`}>\r\n              {data.label}\r\n          </option>\r\n        })}\r\n    </select>\r\n}\r\n  \r\n  \r\nexport  const SurveyRadioInput = props => {\r\n    const {object} = props\r\n    return <div className={props.className}>\r\n        {object.options.map((data, index) => {\r\n            return <div className={`form-check ${props.optionClassName}`}\r\n\r\n            key={`${object.type}-${index}`}>\r\n            <input \r\n            className='form-check-input'\r\n            type={object.type}\r\n            required={props.required}\r\n            value={data.value} \r\n            name={object.name}\r\n            id={`${object.name}-${index}`}\r\n            />\r\n            <label \r\n                className='form-check-label' \r\n                htmlFor={`${object.name}-${index}`}>\r\n                {data.label}\r\n                </label>\r\n            </div>\r\n        })}\r\n    </div>\r\n}\r\n\r\n\r\nexport  const SurveyTextInput = props => {\r\n    const { value, handleChange } = useInputChange(props.defaultValue,props.triggerCallback)\r\n    const inputType = verifyTextInputType(props.type) ? props.type : 'text'\r\n    const inputProps = {\r\n        className: props.className ? props.className : 'form-control',\r\n        onChange: handleChange,\r\n        required: props.requred,\r\n        value: value,\r\n        type: inputType,\r\n        placeholder: props.placeholder ? props.placeholder : 'Your text...',\r\n        name: props.name ? props.name : `${inputType}_${props.key}`\r\n    }\r\n    return inputType === 'textarea' ?\r\n    <textarea\r\n        {...inputProps}\r\n    /> :\r\n\r\n    <input\r\n        {...inputProps}\r\n        />\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport const useInputChange = (customValue, callback) => {\r\n    const [value, setValue] = useState(customValue ? customValue : \"\")\r\n    const handleChange = event => {\r\n      const newValue = event.target.value\r\n      setValue(newValue)\r\n      if (callback) {\r\n        callback(event.target.name,newValue)\r\n      }\r\n    }\r\n    return  {\r\n      value: value,\r\n      handleChange: handleChange\r\n    }\r\n  \r\n  }","import React from 'react'\n\nimport {\n  Survey ,\n} from './survey';\n\nconst App = props => {\n  return <div className='col-6 mx-auto text-center'>\n    <h1 className=\"mb-5\">Hello There</h1>\n    <Survey surveyId={1} /> \n  </div>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}